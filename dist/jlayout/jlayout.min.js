/*
 * jLayout - JavaScript Layout Algorithms v0.3
 *
 * Licensed under the new BSD License.
 * Copyright 2008, Bram Stein
 * All rights reserved.
 */
jLayout={layout:function(A,D){var B={},C=D||{};C.hgap=A.hgap||0;C.vgap=A.vgap||0;B.layout=function(E){return E};B.preferred=function(E){return{width:C.hgap,height:C.vgap}};B.minimum=function(E){return{width:C.hgap,height:C.vgap}};B.maximum=function(E){return{width:Number.MAX_VALUE,height:Number.MAX_VALUE}};return B},grid:function(A,E){var D=E||{},B=this.layout(A,D);D.items=A.items||[];D.columns=A.columns||D.items.length;D.rows=A.rows||0;if(D.rows>0){D.columns=Math.floor((D.items.length+D.rows-1)/D.rows)}else{D.rows=Math.floor((D.items.length+D.columns-1)/D.columns)}B.layout=function(I){var K,J,H=I.insets(),G=H.left,M=H.top,L=(I.bounds().width-(H.left+H.right)-(D.columns-1)*D.hgap)/D.columns,F=(I.bounds().height-(H.top+H.bottom)-(D.rows-1)*D.vgap)/D.rows;for(K=0,J=1;K<D.items.length;K+=1,J+=1){D.items[K].bounds({x:G,y:M,width:L,height:F});if(D.columns<=D.rows){if(J>=D.columns){M+=F+D.vgap;G=H.left;J=0}else{G+=L+D.hgap}}else{if(J>=D.rows){G+=L+D.hgap;M=H.top;J=0}else{M+=F+D.vgap}}D.items[K].doLayout()}return I};function C(F){return function(I){var J=0,K=0,G=0,L,H=I.insets();for(;J<D.items.length;J+=1){L=D.items[J][F+"Size"]();K=Math.max(K,L.width);G=Math.max(G,L.height)}return{width:H.left+H.right+D.columns*K+(D.columns-1)*D.hgap,height:H.top+H.bottom+D.rows*G+(D.rows-1)*D.vgap}}}B.preferred=C("preferred");B.minimum=C("minimum");B.maximum=C("maximum");return B},flexGrid:function(A){var E={},B=this.grid(A,E);function D(G,F){var H=0;for(;H<F;H+=1){G[H]=0}return G}function C(F){return function(H){var K=0,G=0,N=0,M=0,I=0,O=D([],E.columns),L=D([],E.rows),P,J=H.insets();for(K=0;K<E.items.length;K+=1){G=K/E.columns;N=K%E.columns;P=E.items[K][F+"Size"]();if(O[N]<P.width){O[N]=P.width}if(L[G]<P.height){L[G]=P.height}}for(K=0;K<E.columns;K+=1){M+=O[K]}for(K=0;K<E.rows;K+=1){I+=L[K]}return{width:J.left+J.right+M+(E.columns-1)*E.hgap,height:J.top+J.bottom+I+(E.rows-1)*E.vgap}}}B.preferred=C("preferred");B.minimum=C("minimum");B.maximum=C("maximum");B.layout=function(G){var I=0,M=0,F=0,N=B.preferred(G),R=G.bounds().width/N.width,K=G.bounds().height/N.height,Q=D([],E.columns),J=D([],E.rows),H=G.insets(),P=H.left,O=H.top,L;for(I=0;I<E.items.length;I+=1){F=I/E.columns;M=I%E.columns;L=E.items[I].preferredSize();L.width=R*L.width;L.height=K*L.height;if(Q[M]<L.width){Q[M]=L.width}if(J[F]<L.height){J[F]=L.height}}for(M=0;M<E.columns;M+=1){for(F=0,O=H.top;F<E.rows;F+=1){I=F*E.columns+M;if(I<E.items.length){E.items[I].bounds({x:P,y:O,width:Q[M],height:J[F]});E.items[I].doLayout()}O+=J[F]+E.vgap}P+=Q[M]+E.hgap}return G};return B},border:function(I){var G={},D=this.layout(I,G),F=I.east,H=I.west,B=I.north,E=I.south,A=I.center;D.layout=function(K){var O=K.bounds(),J=K.insets(),Q=J.top,L=O.height-J.bottom,P=J.left,N=O.width-J.right,M;if(B&&B.isVisible()){M=B.preferredSize();B.bounds({x:P,y:Q,width:N-P,height:M.height});B.doLayout();Q+=M.height+G.vgap}if(E&&E.isVisible()){M=E.preferredSize();E.bounds({x:P,y:L-M.height,width:N-P,height:M.height});E.doLayout();L-=M.height+G.vgap}if(F&&F.isVisible()){M=F.preferredSize();F.bounds({x:N-M.width,y:Q,width:M.width,height:L-Q});F.doLayout();N-=M.width+G.hgap}if(H&&H.isVisible()){M=H.preferredSize();H.bounds({x:P,y:Q,width:M.width,height:L-Q});H.doLayout();P+=M.width+G.hgap}if(A&&A.isVisible()){A.bounds({x:P,y:Q,width:N-P,height:L-Q});A.doLayout()}return K};function C(J){return function(M){var L=M.insets(),N=0,K=0,O;if(F&&F.isVisible()){O=F[J+"Size"]();N+=O.width+G.hgap;K=O.height}if(H&&H.isVisible()){O=H[J+"Size"]();N+=O.width+G.hgap;K=Math.max(O.height,K)}if(A&&A.isVisible()){O=A[J+"Size"]();N+=O.width;K=Math.max(O.height,K)}if(B&&B.isVisible()){O=B[J+"Size"]();N=Math.max(O.width,N);K+=O.height+G.vgap}if(E&&E.isVisible()){O=E[J+"Size"]();N=Math.max(O.width,N);K+=O.height+G.vgap}return{width:N+L.left+L.right,height:K+L.top+L.bottom}}}D.preferred=C("preferred");D.minimum=C("minimum");D.maximum=C("maximum");return D}};
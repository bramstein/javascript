Nominal Comparison
==================
Goal:
To compare quantitative values for one or more categories with possible sub-categories.

Design solutions:
* sub-categories -> color encoded columns or bars
* many categories -> small-multiples / series
* few categories & many items -> bar chart
* few categories & few items -> column chart

Time series
===========
Goal:
To display a relationship between quantitative values belonging to one or more categories and subdivisions of time.

Design solutions:
* few time subdivisions & many categories -> line chart with a line for each category
* few time subdivisions & few categories -> column chart
* many time subdivisions -> line chart

Part-to-Whole (Composition)
===========================


Distribution
============
Goal:
To display the distribution of quantitative values over a range.

Design solutions:
* single variable & few values -> histogram
* single variable & many values -> line histogram
* two variables -> scatter chart

Correlation
===========
Goal:
To display the correlation between a set of quantitative values

Design solutions:
* two variables -> scatter chart
* three variables -> bubble chart

----------------------------------------------------------------

{ 'category': [1, 2, 3, 4] }

var data = [
	{ 'category': [
			{ 'class': [1, 2, 3, 4] },
			{ 'class': [2, 2, 1, 2] }
		]
	}
]

var data = [
	{ 'Sales': [2, 4, 1] },
	{ 'Engineering': [2, 3, 1] }
];

// simple data without labels
var data = [1, 7, 5, 3];

// simple multi dimensional data
var data = [
	[1, 7, 5, 3],
	[2, 5, 1, 4]
];

// simple data with categories
var data = [
	{ 'Sales': [2, 4, 1, 3] },
	{ 'Engineering': [2, 3, 2, 4] }
];

// simple data with nested catagories
var data = [
	{ '2001': [
		{ 'Sales': [2, 4, 1, 3] },
		{ 'Engineering': [2, 3, 2, 4] }
	]},
	{ '2002': [
		{ 'Sales': [3, 5, 1, 3] },
		{ 'Engineering': [2, 4, 1, 5] }
	]}
];


// a bar chart is 


/**
 * Data format should be:
 * var data = [
 *	 {'Jan': 1},
 *   {'Feb': 7},
 *   {'Mar': 5},
 *   {'Apr': 3}
 * };
 * var data = [1, 7, 5, 3];
 * or:
 * var multiCategoryData = [
 *   {'Jan': [12, 15, 20] }
 * ];
 * var multiCategoryData = [
 *   [12, 15, 20],
 *   [8, 2, 15],
 *   [20, 22, 18],
 *   [27, 12, 15]
 * ];
 *
 * Options can be:
 * var options = {
 *    range: {
 *       from: 0,
 *       to: 10
 *    },
 *    orientation: 'vertical|horizontal',
 *    type: 'stack|group'
 * };
 */
var column = function (data, meta, options) {
	
}();


Most other online chart software deals only with two dimensional data, that is, its basic data types are pairs of x and y values. This project on the other hand stores its data in multiple dimensions, often called a data space. This leaves further room for expansion to, for example, project multidimensional dataset in two or three dimensions. Labels and hierarchical categories---or groupings---are described as meta-data.

var data = 
[
	[10, 30, 2001],
	[20, 45, 2001],
	[13, 23, 2002],
	[12, 60, 2002]
];


Nominal Comparison
var data = {
	options: {
		title: 'Employee turnover'
	},	
	meta: [
		['IT'],
		['R&D'],
		['Sales'],
		['Support']		
	],
	data: [
		[12],
		[6],
		[18],
		[24]
	]
};

Time Series

Value:
	* point:
		-type: dot, square, triangle, cross, diamond
		-fill: unfilled, filled
		-size
		-color
	* bar:
		-orientation: horizontal, vertical
		-proximity: ratio (1.1 default)
		-fill color
		-border color
		-border size
		-base
		-range??
	* line
		-type: standard, high-low, trend, reference
		-color
		-pattern (not recommended)
		-label

scale/axis:
	* type: common, logarithmic
	* tick marks


Axis
	* range
	* number of values
	* value type
	* tick marks (location)
	* type (or function to define the type)

var axis = {
	axis: 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/xhtml; charset=utf-8" />
		<script type="text/javascript" src="core/object.js"></script>
		<script type="text/javascript" src="core/array.js"></script>
		<script type="text/javascript" src="core/function.js"></script>
		<script type="text/javascript" src="core/fun.js"></script>
		<script type="text/javascript" src="core/property.js"></script>
		<script type="text/javascript" src="core/math.js"></script>
		<script type="text/javascript" src="jlayout/jlayout.js"></script>
		<script type="text/javascript" src="chart/defaults.js"></script>
		<script type="text/javascript" src="chart/properties.js"></script>
		<script type="text/javascript" src="chart/data.js"></script>
		<script type="text/javascript" src="chart/interval.js"></script>
		<script type="text/javascript" src="chart/coordinate.js"></script>
		<script type="text/javascript" src="chart/axis.js"></script>
		<script type="text/javascript" src="chart/font.js"></script>
		<script type="text/javascript" src="chart/graphics.js"></script>
		<script type="text/javascript" src="chart/text.mozilla.js"></script>
		<script type="text/javascript" src="chart/chart.js"></script>
		<script type="text/javascript" src="chart/composite-chart.js"></script>
		<script type="text/javascript" src="chart/canvas.js"></script>
		<script type="text/javascript" src="chart/title.js"></script>
		<script type="text/javascript" src="chart/legend.js"></script>
		<script type="text/javascript" src="chart/chart.scatter.js"></script>
		<script type="text/javascript" src="chart/chart.bar.js"></script>
		<script type="text/javascript" src="chart/chart.line.js"></script>
		<script type="text/javascript" src="chart/chart.plot.js"></script>
		<script type="text/javascript" src="chart/chart.histogram.js"></script>

		<script type="text/javascript">
		<![CDATA[
			function anscombe() {
				var d = {
					categories: ['Set 1', 'Set 2', 'Set 3', 'Set 4'],
					data: [
						[
							[10, 8.04],
							[8, 6.95],
							[13, 7.58],
							[9, 8.81],
							[11, 8.33],
							[14, 9.96],
							[6, 7.24],
							[4, 4.26],
							[12, 10.84],
							[7, 4.82],
							[5, 5.68]
						],
						[
							[10, 9.14],
							[8, 8.14],
							[13, 8.74],
							[9, 8.77],
							[11, 9.26],
							[14, 8.1],
							[6, 6.13],
							[4, 3.1],
							[12, 9.13],
							[7, 7.26],
							[5, 4.74]
						],
						[
							[10, 7.46],
							[8, 6.77],
							[13, 12.74],
							[9, 7.11],
							[11, 7.81],
							[14, 8.84],
							[6, 6.08],
							[4, 5.39],
							[12, 8.15],
							[7, 6.42],
							[5, 5.73]
						],
						[
							[8, 6.58],
							[8, 5.76],
							[8, 7.71],
							[8, 8.84],
							[8, 8.47],
							[8, 7.04],
							[8, 5.25],
							[19, 12.5],
							[8, 5.56],
							[8, 7.91],
							[8, 6.89]
						]
					]
				};

				var plot = defaults.type.scatter('scatter-anscombe', d, { title: 'Anscombe\'s Quartet of Datasets' });
				plot.bounds({width: 350, height: 300});
				plot.draw();
			}

			function challenger() {
				var c = [
					[11.9, 11],
					[14.1, 4],
					[14.2, 4],
					[17.1, 2],
					[19.1, 0],
					[19.2, 0],
					[19.3, 0],
					[19.4, 0],
					[19.5, 0],
					[20.1, 0],
					[21.1, 4],
					[21.2, 0],
					[21.3, 4],
					[21.4, 0],
					[21.5, 0],
					[22.1, 0],
					[23.2, 0],
					[24.3, 4],
					[24.4, 0],
					[24.5, 0],
					[26.1, 0],
					[26.2, 0],
					[27.1, 0]
				];
				var plot = defaults.type.scatter('scatter-challenger', c, { title: 'Challenger Shuttle Disaster - O-Ring Damage', subtitle: 'Temperature vs Damage Index' });
				plot.bounds({width: 300, height: 300});
				plot.draw();
			}

			function bonds() {
				var d = {
					categories: ['Treasury Bonds', 'AAA Municipal Bonds'],
					subcategories: ['Two-Year Yields', 'Ten-Year Yields'],
					data: [
						[1.11, 3],
						[3.1, 5.7],
					]
				};

				var plot = defaults.type.bar('bar-bonds', d, { title: 'Bond Yields'});
				plot.bounds({width: 300, height: 200});
				plot.draw();
			}

			function sales() {
				var d = {
					categories: ['Sales', 'Engineering', 'Marketing', 'HR'],
					data: [1.5, 3, 2.2, -0.3]
				};
				var plot = defaults.type.bar('bar-pcount', d, {title: 'Employee turnover'});
				plot.bounds({width: 350, height: 200});
				plot.draw();
			}

			function linesales() {
				var d = {
					categories: ['2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008'],
					data: [13000, 13400, 14000, 16000, 14100, 12700, 15000, 16000]
				};

				var plot = defaults.type.line('line-sales', d, {title: 'Sales per year'});
				plot.bounds({width: 350, height: 200});
				plot.draw();
			}

			function linesdepartments() {
				var d = {
					categories: ['2001', '2002', '2003', '2004', '2005', '2006'],
					subcategories: ['Engineering', 'Marketing', 'HR', 'R&D'],
					data: [
						[1200, 2000, 4000, 4500, 5000, 6300],
						[2000, 4000, 3200, 6000, 7000, 7500],
						[1000, 1500, 1000, 1000, 1800, 1800],
						[1800, 2000, 2100, 2300, 2000, 2700]
					]
				};

				var plot = defaults.type.line('line-departments', d, {title: 'Expenses by department'});
				plot.bounds({width: 450, height: 200});
				plot.draw();
			}

			function stacked() {
				var d = {
					categories: ['Q1', 'Q2'],
					subcategories: ['West', 'East', 'South', 'North'],
					data: [
						[38, 22, 15, 25],
						[25, 27, 20, 28]
					]
				};

				var plot = defaults.type.bar('bar-stacked', d, {title: 'Percentage of Total Sales', stacked: true});
				plot.bounds({width: 300, height: 300});
				plot.draw();
			}

			function vertical() {
				var d = {
					categories: ['West', 'South', 'East', 'North'],
					data: [38, 25, 22, 15]
				};

				var plot = defaults.type.bar('bar-vertical', d, {title: 'Percentage of Total Sales', reverse: true});
				plot.bounds({width: 350, height: 200});
				plot.draw();
			}

			function bar() {
				sales();
				bonds();
				stacked();
				vertical();
			}

			function scatter() {
				anscombe();
				challenger();
			}

			function line() {
				linesales();
				linesdepartments();

			}

			function sine(x, y) {
				return Interval.add(Interval.sin(x), y)
			}


			function sinewave() {
				var plot = defaults.type.plot('plot-sine', sine, {
					title: 'Sine Wave',
					axes: {
						horizontal: axis({
							from: -Math.PI,
							to: Math.PI,
							ticks: {
								major: [-Math.PI, -Math.PI / 2, 0, Math.PI /  2, Math.PI],
								labels: ['-π', '-½π', '0', '½π', 'π']
							}
						}),
						vertical: axis({
							from: -1,
							to: 1,
							ticks: {
								major: 3
							}
						})
					},
					draw: {
						/*horizontal: {
							grid: true,
							labels: false,
							axis: false,
							ticks: false
						},
						vertical: {
							grid: false,
							labels: false,
							axis: false,
							ticks: false
						}*/
					}
				});
				plot.bounds({width: 350, height: 200});
				plot.draw();
			}

			function rose(r, t) {
			//	return Interval.add(t, r);
				return Interval.add(Interval.cos({from: t.from * 4, to: t.to * 4}), r);
			//	return Interval.add({from: 3 + t.from * 2, to: 3 + t.to * 2}, r);
			}

			function polarrose() {
				var plot = defaults.type.plot('plot-rose', rose, {
					title: 'Polar Rose',
					axes: {
						polar: axis({
							from: -1,
							to: 1,
							ticks: {
								major: [-1, 1]
							}
						})
					},
					range: {
						from: 0,
						to: Math.PI * 2
					}
				});
				plot.bounds({width: 350, height: 350});
				plot.draw();
			}


			function func() {
				sinewave();
				polarrose();
			}



			function histogram() {
				var d = {
					categories: ['60-65', '65-70', '70-75', '75-80', '80-85', '85-90'],
					data: [3, 3, 8, 10, 5, 2]
				};
				var plot = defaults.type.histogram('test', d, {title: 'Heights of Black Cherry Trees'});
				plot.bounds({width: 280, height: 250});
				plot.draw();
			}

			function draw() {
				font = font();

/*
				var plot = defaults.type.plot('test', function (x) {return {from: -100, to: -100};}, {
					axes: {
						horizontal: axis({
							from: 0,
							to: 1,
							ticks: {
								major: 5
							}
						}),
						vertical: axis({
							from: 0,
							to: 1,
							ticks: {
								major: 5
							}
						})
					},
					draw: {
						horizontal: {
							grid: false
						},
						vertical: {
							grid: false
						}
					}
				});
				plot.bounds({width: 200, height: 200});
				plot.draw();
*/
				bar();
				scatter();
				line();
				func();
				histogram();


			}
		]]>
		</script>
		<style>
			html {
				background-color: white;
				margin: 0em;
				padding: 0em;
			}

			body {
				margin-top: 0em;
				padding-top: 3em;
				padding-bottom: 2em;
				padding-left: 3em;
				padding-right: 3em;
				background-color: white;
			}

			div {
				margin-bottom: 3em;
			}

			.left {
				float: left;	
				width: 50%;
			}

			.right {
				float: right;
				width: 50%;
			}
		</style>
	</head>
	<body onload="draw();">
		<canvas id="test" width="400" height="300"></canvas>

		<div class="left">
			<canvas id="bar-pcount" width="350" height="200"></canvas>
		</div>
		<div class="right">
			<canvas id="bar-bonds" width="300" height="200"></canvas>
		</div>
		<div class="left">
			<canvas id="bar-stacked" width="300" height="300"></canvas>
		</div>
		<div class="right">
			<canvas id="bar-vertical" width="350" height="200"></canvas>
		</div>
		<!--<div>
			<canvas id="canvas-context" width="300" height="200"></canvas>
		</div>-->
		<div class="left">
			<canvas id="scatter-anscombe" width="350" height="300"></canvas>
		</div>
		<div class="right">
			<canvas id="scatter-challenger" width="300" height="300"></canvas>
		</div>
		<div class="left">
			<canvas id="line-sales" width="350" height="200"></canvas>
		</div>
		<div class="right">
			<canvas id="line-departments" width="450" height="200"></canvas>
		</div>

		<div class="left">
			<canvas id="plot-sine" width="350" height="200"></canvas>
		</div>
		<div class="right">
			<canvas id="plot-rose" width="350" height="350"></canvas>
		</div>
	</body>
</html>
